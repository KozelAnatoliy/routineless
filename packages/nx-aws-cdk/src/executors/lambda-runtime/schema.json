{
  "$schema": "http://json-schema.org/schema",
  "version": 2,
  "title": "LambdaRuntime executor",
  "description": "",
  "type": "object",
  "properties": {
    "main": {
      "type": "string",
      "description": "The path to the entry file, relative to project.",
      "x-completion-type": "file",
      "x-completion-glob": "**/*@(.js|.ts)",
      "x-priority": "important"
    },
    "outputPath": {
      "type": "string",
      "description": "The output path of the generated files.",
      "x-completion-type": "directory",
      "x-priority": "important"
    },
    "outputFileName": {
      "type": "string",
      "description": "Name of the main output file. Defaults same basename as 'main' file."
    },
    "tsConfig": {
      "type": "string",
      "description": "The path to tsconfig file.",
      "x-completion-type": "file",
      "x-completion-glob": "tsconfig.*.json",
      "x-priority": "important"
    },
    "additionalEntryPoints": {
      "type": "array",
      "description": "List of additional entry points.",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "bundle": {
      "type": "boolean",
      "description": "Whether to bundle the main entry point and additional entry points. Set to false to keep individual output files.",
      "default": true
    },
    "format": {
      "type": "string",
      "description": "Module format to output. Defaults to matching format from tsconfig (e.g. CJS for CommonJS, and ESM otherwise).",
      "alias": "f",
      "enum": ["esm", "cjs"],
      "default": "esm"
    },
    "assets": {
      "type": "array",
      "description": "List of static assets.",
      "default": [],
      "items": {
        "$ref": "#/definitions/assetPattern"
      }
    },
    "external": {
      "type": "array",
      "description": "Mark one or more module as external. Can use * wildcards, such as '@aws-sdk/*'.",
      "default": ["@aws-sdk/*"],
      "items": {
        "type": "string"
      }
    },
    "outputHashing": {
      "type": "string",
      "description": "Define the output filename cache-busting hashing mode.",
      "default": "none",
      "enum": ["none", "all"]
    },
    "deleteOutputPath": {
      "type": "boolean",
      "description": "Delete the output path before building.",
      "default": true
    },
    "metafile": {
      "type": "boolean",
      "description": "Generate a meta.json file in the output folder that includes metadata about the build. This file can be analyzed by other tools.",
      "default": false
    },
    "sourcemap": {
      "oneOf": [{ "type": "string", "enum": ["linked", "inline", "external", "both"] }, { "type": "boolean" }],
      "alias": "sourceMap",
      "description": "Generate sourcemap."
    },
    "minify": {
      "type": "boolean",
      "description": "Minifies outputs.",
      "default": false
    },
    "target": {
      "type": "string",
      "description": "The environment target for outputs.",
      "default": "esnext"
    },
    "skipTypeCheck": {
      "type": "boolean",
      "description": "Skip type-checking via TypeScript. Skipping type-checking speeds up the build but type errors are not caught.",
      "default": false,
      "x-priority": "internal"
    },
    "generatePackageJson": {
      "type": "boolean",
      "description": "Generates a `package.json` with dependencies that were excluded and needs to be installed.",
      "default": false
    },
    "thirdParty": {
      "type": "boolean",
      "description": "Includes third-party packages in the bundle (i.e. npm packages).",
      "default": true
    },
    "esbuildOptions": {
      "type": "object",
      "description": "Additional options to pass to esbuild. See https://esbuild.github.io/api/. Cannot be used with 'esbuildConfig' option.",
      "additionalProperties": true,
      "x-priority": "important"
    },
    "esbuildConfig": {
      "type": "string",
      "description": "Path to a esbuild configuration file. See https://esbuild.github.io/api/. Cannot be used with 'esbuildOptions' option.",
      "x-priority": "important"
    }
  },
  "required": ["tsConfig", "outputPath"],
  "definitions": {
    "assetPattern": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "glob": {
              "type": "string",
              "description": "The pattern to match."
            },
            "input": {
              "type": "string",
              "description": "The input directory path in which to apply `glob`. Defaults to the project root."
            },
            "output": {
              "type": "string",
              "description": "Relative path within the output folder."
            },
            "ignore": {
              "description": "An array of globs to ignore.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "required": ["glob", "input", "output"]
        },
        {
          "type": "string"
        }
      ]
    }
  },
  "additionalProperties": true
}
