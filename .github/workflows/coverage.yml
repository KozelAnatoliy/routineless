name: Pull requiest tests

on:
  push:
    branches:
      - main
      - develop

env:
  NX_BRANCH: ${{ github.head_ref || github.ref_name }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: false # this enables DTE
  NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 0 # expected number of agents
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}

jobs:
  main:
    name: Coverage Job
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Set node/npm/yarn versions using volta
      - uses: volta-cli/action@v4
        with:
          package-json-path: '${{ github.workspace }}/package.json'

      - name: Print node/npm versions
        id: versions
        run: |
          node_ver=$( node --version )

          echo "Node: ${node_ver:1}"
          echo "NPM: $( npm --version )"

          echo "node_version=${node_ver:1}" >> $GITHUB_OUTPUT

      - name: Use the package manager cache if available
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-

      - name: Install dependencies
        run: npm ci

      - name: Collect coverage
        run: npx nx run-many --target=test --parallel=3 --ci --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          flags: cdk,create-aws-cdk-app,nx-aws-cdk
          files: '!./.nx'
          directory: coverage
          fail_ci_if_error: true
          verbose: true
